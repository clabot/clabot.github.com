{"name":"clabot","tagline":"A bot to take the pain out of Contributor License Agreements","body":"![clabot](http://en.gravatar.com/userimage/20257526/bb65aa5c4ec93b91c4a2c620d2181d3d.png?size=256)\r\n\r\nclabot **automatically checks Pull Requests** submitted to your repository.\r\n\r\nIf the sender hasn't signed the **C**onstributor **L**icense **A**greement, he **comments with instructions**, otherwise the maintainer will be notified.\r\n\r\n*[What a CLA is and why you need one](http://en.wikipedia.org/wiki/Contributor_License_Agreement)*\r\n\r\n![post fancy gifs like it's 1995](http://i.imgur.com/x9ovPJ7.gif)\r\n\r\n**The bot is fully customizeable:**\r\n* Hook any API into the `getContractors` mechanism.\r\n* Provide templates to adapt clabot's comments to your needs\r\n* Flags to ignore pull requests from collaborators or people who have already contributed\r\n\r\nYou can even trigger clabot manually with a **special comment API**. Reply with `[clabot:check]` to any pull request and you'll instantly see wether the sender has signed or not.\r\n\r\nThis dramatically **reduces the time investement** needed to establish a strict contribution policy for your projects.\r\n\r\n**The focus of this project lies on communication automation:**\r\n* No more painful begging for replies\r\n* No more hours of processing the pull request queue\r\n* No more manually checking the contractor database\r\n\r\nThe bot is written in coffeescript, running on node.js. Due to [pubsubhubhub](http://developer.github.com/v3/repos/hooks/#pubsubhubbub) and GitHub's live updates answers will appear almost instantly.\r\n\r\n## Try it out\r\n\r\nFeel free to open pull requests in our [sandbox](http://github.com/clabot/sandbox) environment.\r\nExperience how clabot automatically responds, guiding you through the process of signing a Contributors License Agreement.\r\n*Note:* If you don't want to go through the hassle of forking the repo just reply `[clabot:check]` to any of the pull requests.\r\nYou can use `[clabot:check=yourusername]` to check your own status.\r\n\r\n## Getting Your Own\r\n\r\n**You'll probably never have to hack on this repo directly.**\r\n\r\nInstead this repo provides a library that's distributed by npm that you simply require in your project. Follow the instructions below and get your own clabot ready to deploy.\r\n\r\nWe have set up a [sample implementation](http://github.com/clabot/sample). You can find a lengthy tutorial there on how to deploy your very own clabot to heroku.\r\n\r\n## Documentation\r\n\r\nclabot is available on the npm registry.\r\n```bash\r\nnpm install clabot\r\n```\r\n\r\nYou require clabot and call `clabot.createApp(options)`. This will return a new [express.js](http://expressjs.com) app.\r\nBased on the options provided this already sets up some clabot specific routes and middlewares.\r\n\r\nAll you have to do is listen to a port and clabot will be up and running.\r\n\r\n```js\r\napp = require('clabot').createApp(options);\r\napp.listen(process.env.PORT || 1337);\r\n```\r\n\r\nIn order to receive events from GitHub you have to subscribe.\r\nclabot will never push code to the repositories, but push access is required to be able to receive events from the GitHub API.\r\n\r\n```bash\r\ncurl -u \"clabotusername\" -i https://api.github.com/hub -F \"hub.mode=subscribe\" -F \"hub.topic=https://github.com/:user/:repo/events/pull_request\" -F \"hub.callback=http://your-clabot.herokuapp.com/notify\" -F \"hub.secret=supersecretrandomstring\"\r\n\r\ncurl -u \"clabotusername\" -i https://api.github.com/hub -F \"hub.mode=subscribe\" -F \"hub.topic=https://github.com/:user/:repo/events/issue_comment\" -F \"hub.callback=http://your-clabot.herokuapp.com/notify\" -F \"hub.secret=supersecretrandomstring\"\r\n```\r\n\r\n*Note:* You have to do both of the commands for every repository that should be observed. One command for pull requests and one for comments on those.\r\n\r\n[http://developer.github.com/v3/repos/hooks/#pubsubhubbub](http://developer.github.com/v3/repos/hooks/#pubsubhubbub)\r\n\r\n\r\n### Options\r\n\r\n#### getContractors(callback)\r\n\r\nType: `Function`\r\n\r\n*required*\r\n\r\nThis function will be called by clabot in case he needs a list of all signed contractors.\r\nProvide a function here that queries your database and calls the callback with an array of GitHub usernames.\r\n\r\n#### token\r\n\r\nType: `String`\r\n\r\n*required*\r\n\r\nA valid GitHub oAuth token with access to all repositories that clabot should observe.\r\n\r\n*Note:* It's highly recommended that you **don't commit the token to your repository**. Use environment variables.\r\n\r\n*Note:* It's highly recommended that you **create a sperate GitHub account for your clabot**.\r\n\r\n```bash\r\ncurl -u 'clabotusername' -d '{\"scopes\":[\"repo\"],\"note\":\"clabot\"}' https://api.github.com/authorizations\r\n```\r\n[Creating an OAuth token for command-line use](https://help.github.com/articles/creating-an-oauth-token-for-command-line-use)\r\n\r\n\r\n#### templates\r\n\r\nType: `Object`\r\n\r\n*optional*\r\n\r\nclabot provides pretty cool standard templates, but if they don't fit your needs you can specify custom ones.\r\nThe object may specify: `alreadySigned` and `notYetSigned`. You should have a look at the [originals](src/templates).\r\n*Note:* Templates are processed by [lodash's](http://lodash.com) `_.template`\r\n\r\n#### templateData\r\n\r\nType: `Object`\r\n\r\nSpecify details displayed in clabot's answers. You may specify any data you like, so you can access it in your custom templates\r\n.\r\n* \"image\": 'Boolean' show funny gifs in the response\r\n* \"link\": 'String' link to your electronical submission form\r\n* \"maintainer\": 'String' GitHub username to be notified, if CLA was signed\r\n\r\n#### secrets\r\n\r\nType: `Object`\r\n\r\n*required*\r\n\r\nThe secrets you provided when subscribing to GitHub's events. Organized in a user/repo way so you can vary secrets on a per repo basis.\r\n\r\n```js\r\nsecrets: {\r\n  username:\r\n    reponame: 'secret1'\r\n    reponame2: 'secret2'\r\n}\r\n```\r\n*Note:* It's highly recommended that you **don't commit secrets to your repository**. Use environment variables.\r\n\r\n#### skipCollaborators\r\n\r\nType: `Boolean`\r\n\r\nDefault: false\r\n\r\nDon't answer to pull request from people with push access to the repository.\r\n\r\n#### skipContributors\r\n\r\nType: `Boolean`\r\n\r\nDefault: true\r\n\r\nDon't answer to pull request from people who have already contributed to the repository.\r\n\r\n## Misc & Attributions\r\n\r\n**Don't know what the whole CLA thing is about?**\r\n\r\n> The purpose of a CLA is to ensure that the guardian of a project's outputs has the necessary ownership or grants of rights over all contributions to allow them to distribute under the chosen licence.\r\n[Wikipedia](http://en.wikipedia.org/wiki/Contributor_License_Agreement)\r\n\r\n**Need a Contributor License Agreement template?**\r\n\r\n> Project Harmony is a community-centered group focused on contributor agreements for free and open source software (FOSS) [Project Harmony](http://www.harmonyagreements.org/index.html)\r\n\r\n**Wanna hang out and chat about clabot?**\r\n\r\n[Join our HipChat room](https://www.hipchat.com/gBZFBJa2w)\r\n\r\n**clabot is [MIT licensed](LICENSE). In case you forgot about the most important part of it:**\r\n\r\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n> EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\r\n> OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n> NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n> HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\n> WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\n> FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\r\n> OTHER DEALINGS IN THE SOFTWARE.\r\n\r\nWe aren't lawyers, and none of the clabot documentation, functionality, or other communication constitutes legal advice. Consult your lawyer about a Contributor License Agreement.\r\n\r\n<hr />\r\n\r\nauthored by **[Stephan BÃ¶nnemann](https://github.com/boennemann) - [@boennemann](https://twitter.com/boennemann)**\r\n\r\nmaintained by [excellenteasy](https://github.com/excellenteasy)\r\n\r\nclabot logo by [Proycontec SL.](http://www.proycontec.es/proycontec-3-iconos-gratis-index-es.html) - [Creative Commons Attribution-Share Alike 3.0](http://creativecommons.org/licenses/by-sa/3.0/us/)\r\n","google":"UA-39519722-1","note":"Don't delete this file! It's used internally to help with page regeneration."}